// Mock Data for EzyFix Admin Portal
import type {
  Customer,
  DashboardStats,
  Payment,
  PaymentMethod,
  RevenueChart,
  Service,
  ServiceCategory,
  ServiceDemand,
  Skill,
  Technician,
  TechnicianPerformance,
  User,
  Voucher,
  VoucherUsage,
  WalletAccount,
  WalletPayoutRequest,
  WalletTransaction,
} from '@/types/admin';

// ============================================
// DASHBOARD STATISTICS
// ============================================

export const dashboardStats: DashboardStats = {
  totalUsers: 1248,
  totalCustomers: 856,
  totalTechnicians: 342,
  totalSupportStaff: 50,
  activeAppointments: 127,
  completedAppointments: 8563,
  totalRevenue: 2456780000, // VND
  monthlyRevenue: 456780000, // VND
  averageRating: 4.7,
  activeDisputes: 12,
  pendingPayouts: 28,
  activeVouchers: 15,
};

// ============================================
// REVENUE CHART DATA (Last 7 days)
// ============================================

export const revenueChartData: RevenueChart[] = [
  { date: '2025-10-13', revenue: 45600000, appointments: 82 },
  { date: '2025-10-14', revenue: 52300000, appointments: 95 },
  { date: '2025-10-15', revenue: 48900000, appointments: 88 },
  { date: '2025-10-16', revenue: 61200000, appointments: 102 },
  { date: '2025-10-17', revenue: 58700000, appointments: 97 },
  { date: '2025-10-18', revenue: 72400000, appointments: 115 },
  { date: '2025-10-19', revenue: 67680000, appointments: 108 },
];

// ============================================
// SERVICE DEMAND DATA
// ============================================

export const serviceDemandData: ServiceDemand[] = [
  { serviceName: 'S·ª≠a m√°y l·∫°nh', requestCount: 342, revenue: 856000000 },
  { serviceName: 'S·ª≠a m√°y gi·∫∑t', requestCount: 298, revenue: 672000000 },
  { serviceName: 'S·ª≠a t·ªß l·∫°nh', requestCount: 215, revenue: 548000000 },
  { serviceName: 'S·ª≠a TV', requestCount: 187, revenue: 421000000 },
  { serviceName: 'S·ª≠a b√¨nh n√≥ng l·∫°nh', requestCount: 156, revenue: 312000000 },
];

// ============================================
// TECHNICIAN PERFORMANCE DATA
// ============================================

export const technicianPerformanceData: TechnicianPerformance[] = [
  {
    technicianID: 't1',
    technicianName: 'Nguy·ªÖn VƒÉn A',
    specialty: 'ƒêi·ªán l·∫°nh',
    completedJobs: 156,
    totalJobs: 162,
    rating: 4.9,
    earnings: 78000000,
  },
  {
    technicianID: 't2',
    technicianName: 'Tr·∫ßn Th·ªã B',
    specialty: 'S·ª≠a ·ªëng n∆∞·ªõc',
    completedJobs: 142,
    totalJobs: 148,
    rating: 4.8,
    earnings: 71000000,
  },
  {
    technicianID: 't3',
    technicianName: 'L√™ VƒÉn C',
    specialty: 'ƒêi·ªán d√¢n d·ª•ng',
    completedJobs: 138,
    totalJobs: 145,
    rating: 4.8,
    earnings: 69000000,
  },
  {
    technicianID: 't4',
    technicianName: 'Ph·∫°m Th·ªã D',
    specialty: 'S∆°n nh√†',
    completedJobs: 125,
    totalJobs: 133,
    rating: 4.7,
    earnings: 62500000,
  },
  {
    technicianID: 't5',
    technicianName: 'Ho√†ng VƒÉn E',
    specialty: 'ƒêi·ªán t·ª≠',
    completedJobs: 118,
    totalJobs: 125,
    rating: 4.6,
    earnings: 59000000,
  },
];

// ============================================
// USERS DATA
// ============================================

export const mockUsers: User[] = [
  {
    UserID: 'u1',
    RoleID: 'r3',
    RoleName: 'Customer',
    FirstName: 'Nguy·ªÖn',
    LastName: 'VƒÉn An',
    Email: 'nguyenvanan@gmail.com',
    Phone: '0901234567',
    AvatarLink: 'https://i.pravatar.cc/150?img=1',
    PreferredLanguage: 'vi',
    IsActive: true,
    IsVerify: true,
    CreatedDate: '2025-01-15T10:30:00',
  },
  {
    UserID: 'u2',
    RoleID: 'r2',
    RoleName: 'Technician',
    FirstName: 'Tr·∫ßn',
    LastName: 'Th·ªã B√¨nh',
    Email: 'tranthibinh@gmail.com',
    Phone: '0902345678',
    AvatarLink: 'https://i.pravatar.cc/150?img=5',
    PreferredLanguage: 'vi',
    IsActive: true,
    IsVerify: true,
    CreatedDate: '2024-11-20T14:20:00',
  },
  {
    UserID: 'u3',
    RoleID: 'r4',
    RoleName: 'Support',
    FirstName: 'L√™',
    LastName: 'VƒÉn C∆∞·ªùng',
    Email: 'levancuong@ezyfix.com',
    Phone: '0903456789',
    AvatarLink: 'https://i.pravatar.cc/150?img=12',
    PreferredLanguage: 'vi',
    IsActive: true,
    IsVerify: true,
    CreatedDate: '2024-09-10T09:00:00',
  },
  {
    UserID: 'u4',
    RoleID: 'r3',
    RoleName: 'Customer',
    FirstName: 'Ph·∫°m',
    LastName: 'Th·ªã Dung',
    Email: 'phamthidung@gmail.com',
    Phone: '0904567890',
    AvatarLink: 'https://i.pravatar.cc/150?img=10',
    PreferredLanguage: 'vi',
    IsActive: true,
    IsVerify: false,
    CreatedDate: '2025-02-28T16:45:00',
  },
  {
    UserID: 'u5',
    RoleID: 'r2',
    RoleName: 'Technician',
    FirstName: 'Ho√†ng',
    LastName: 'VƒÉn Em',
    Email: 'hoangvanem@gmail.com',
    Phone: '0905678901',
    AvatarLink: 'https://i.pravatar.cc/150?img=15',
    PreferredLanguage: 'vi',
    IsActive: true,
    IsVerify: true,
    CreatedDate: '2024-12-05T11:30:00',
  },
];

// ============================================
// CUSTOMERS DATA
// ============================================

export const mockCustomers: Customer[] = [
  {
    ...mockUsers[0]!,
    CustomerID: 'c1',
    LoyaltyPoints: 1250,
    PreferredContactMethod: 'Phone',
  },
  {
    ...mockUsers[3]!,
    CustomerID: 'c2',
    LoyaltyPoints: 450,
    PreferredContactMethod: 'Email',
  },
];

// ============================================
// SKILLS DATA
// ============================================

export const mockSkills: Skill[] = [
  { SkillID: 'sk1', SkillName: 'S·ª≠a m√°y l·∫°nh' },
  { SkillID: 'sk2', SkillName: 'S·ª≠a m√°y gi·∫∑t' },
  { SkillID: 'sk3', SkillName: 'S·ª≠a t·ªß l·∫°nh' },
  { SkillID: 'sk4', SkillName: 'S·ª≠a TV' },
  { SkillID: 'sk5', SkillName: 'S·ª≠a b√¨nh n√≥ng l·∫°nh' },
  { SkillID: 'sk6', SkillName: 'ƒêi·ªán l·∫°nh c√¥ng nghi·ªáp' },
  { SkillID: 'sk7', SkillName: 'ƒêi·ªán d√¢n d·ª•ng' },
];

// ============================================
// TECHNICIANS DATA
// ============================================

export const mockTechnicians: Technician[] = [
  {
    ...mockUsers[1]!,
    TechnicianID: 't1',
    Certification: 'Ch·ª©ng ch·ªâ ƒêi·ªán l·∫°nh c·∫•p 3',
    YearsOfExperience: 5,
    AvailabilityStatus: 'Available',
    HourlyRate: 150000,
    Rating: 4.8,
    TotalJobs: 142,
    Skills: [
      { TechnicianID: 't1', SkillID: 'sk1', SkillName: 'S·ª≠a m√°y l·∫°nh', Level: 'Expert' },
      { TechnicianID: 't1', SkillID: 'sk2', SkillName: 'S·ª≠a m√°y gi·∫∑t', Level: 'Intermediate' },
      { TechnicianID: 't1', SkillID: 'sk5', SkillName: 'S·ª≠a b√¨nh n√≥ng l·∫°nh', Level: 'Expert' },
    ],
  },
  {
    ...mockUsers[4]!,
    TechnicianID: 't2',
    Certification: 'Ch·ª©ng ch·ªâ ƒêi·ªán l·∫°nh c·∫•p 2',
    YearsOfExperience: 3,
    AvailabilityStatus: 'Busy',
    HourlyRate: 120000,
    Rating: 4.6,
    TotalJobs: 89,
    Skills: [
      { TechnicianID: 't2', SkillID: 'sk3', SkillName: 'S·ª≠a t·ªß l·∫°nh', Level: 'Expert' },
      { TechnicianID: 't2', SkillID: 'sk4', SkillName: 'S·ª≠a TV', Level: 'Intermediate' },
    ],
  },
];

// ============================================
// SERVICE CATEGORIES DATA
// ============================================

export const mockServiceCategories: ServiceCategory[] = [
  { CategoryID: 'cat1', CategoryName: 'ƒêi·ªán l·∫°nh', ServiceCount: 5, IsActive: true },
  { CategoryID: 'cat2', CategoryName: 'ƒêi·ªán t·ª≠', ServiceCount: 3, IsActive: true },
  { CategoryID: 'cat3', CategoryName: 'N·ªôi th·∫•t', ServiceCount: 4, IsActive: true },
  { CategoryID: 'cat4', CategoryName: 'ƒêi·ªán d√¢n d·ª•ng', ServiceCount: 6, IsActive: true },
];

// ============================================
// SERVICES DATA
// ============================================

export const mockServices: Service[] = [
  {
    ServiceID: 's1',
    CategoryID: 'cat1',
    CategoryName: 'ƒêi·ªán l·∫°nh',
    ServiceName: 'S·ª≠a m√°y l·∫°nh',
    Description: 'S·ª≠a ch·ªØa, b·∫£o tr√¨ m√°y l·∫°nh c√°c lo·∫°i',
    ServiceIconUrl: '‚ùÑÔ∏è',
    BasePrice: 200000,
    IsActive: true,
    AvailableTechniciansCount: 45,
    TotalRequests: 342,
  },
  {
    ServiceID: 's2',
    CategoryID: 'cat1',
    CategoryName: 'ƒêi·ªán l·∫°nh',
    ServiceName: 'S·ª≠a m√°y gi·∫∑t',
    Description: 'S·ª≠a ch·ªØa m√°y gi·∫∑t c·ª≠a ngang, c·ª≠a tr√™n',
    ServiceIconUrl: 'üß∫',
    BasePrice: 180000,
    IsActive: true,
    AvailableTechniciansCount: 38,
    TotalRequests: 298,
  },
  {
    ServiceID: 's3',
    CategoryID: 'cat1',
    CategoryName: 'ƒêi·ªán l·∫°nh',
    ServiceName: 'S·ª≠a t·ªß l·∫°nh',
    Description: 'S·ª≠a ch·ªØa t·ªß l·∫°nh, t·ªß ƒë√¥ng c√°c lo·∫°i',
    ServiceIconUrl: 'üßä',
    BasePrice: 220000,
    IsActive: true,
    AvailableTechniciansCount: 32,
    TotalRequests: 215,
  },
  {
    ServiceID: 's4',
    CategoryID: 'cat2',
    CategoryName: 'ƒêi·ªán t·ª≠',
    ServiceName: 'S·ª≠a TV',
    Description: 'S·ª≠a ch·ªØa TV LCD, LED, Smart TV',
    ServiceIconUrl: 'üì∫',
    BasePrice: 250000,
    IsActive: true,
    AvailableTechniciansCount: 28,
    TotalRequests: 187,
  },
  {
    ServiceID: 's5',
    CategoryID: 'cat1',
    CategoryName: 'ƒêi·ªán l·∫°nh',
    ServiceName: 'S·ª≠a b√¨nh n√≥ng l·∫°nh',
    Description: 'S·ª≠a ch·ªØa b√¨nh n√≥ng l·∫°nh ƒëi·ªán, gas',
    ServiceIconUrl: 'üöø',
    BasePrice: 150000,
    IsActive: true,
    AvailableTechniciansCount: 25,
    TotalRequests: 156,
  },
  {
    ServiceID: 's6',
    CategoryID: 'cat4',
    CategoryName: 'ƒêi·ªán d√¢n d·ª•ng',
    ServiceName: 'S·ª≠a qu·∫°t ƒëi·ªán',
    Description: 'S·ª≠a ch·ªØa qu·∫°t tr·∫ßn, qu·∫°t ƒë·ª©ng, qu·∫°t h·ªôp',
    ServiceIconUrl: 'üåÄ',
    BasePrice: 100000,
    IsActive: false,
    AvailableTechniciansCount: 0,
    TotalRequests: 87,
  },
];

// ============================================
// PAYMENT METHODS DATA
// ============================================

export const mockPaymentMethods: PaymentMethod[] = [
  {
    PaymentMethodID: 'pm1',
    MethodCode: 'MOMO',
    MethodName: 'V√≠ MoMo',
    IsOnline: true,
    IsActive: true,
    CreatedDate: '2024-01-01T00:00:00',
  },
  {
    PaymentMethodID: 'pm2',
    MethodCode: 'ZALOPAY',
    MethodName: 'ZaloPay',
    IsOnline: true,
    IsActive: true,
    CreatedDate: '2024-01-01T00:00:00',
  },
  {
    PaymentMethodID: 'pm3',
    MethodCode: 'VNPAY',
    MethodName: 'VNPAY',
    IsOnline: true,
    IsActive: true,
    CreatedDate: '2024-01-01T00:00:00',
  },
  {
    PaymentMethodID: 'pm4',
    MethodCode: 'BANK_QR',
    MethodName: 'Chuy·ªÉn kho·∫£n QR',
    IsOnline: true,
    IsActive: true,
    CreatedDate: '2024-01-01T00:00:00',
  },
  {
    PaymentMethodID: 'pm5',
    MethodCode: 'CASH',
    MethodName: 'Ti·ªÅn m·∫∑t',
    IsOnline: false,
    IsActive: true,
    CreatedDate: '2024-01-01T00:00:00',
  },
];

// ============================================
// VOUCHERS DATA
// ============================================

export const mockVouchers: Voucher[] = [
  {
    VoucherID: 'v1',
    VoucherCode: 'WELCOME2025',
    VoucherDescription: 'Gi·∫£m 20% cho kh√°ch h√†ng m·ªõi',
    DiscountType: 'Percentage',
    DiscountValue: 20,
    MaxDiscountAmount: 100000,
    MinimumOrderAmount: 200000,
    ValidFrom: '2025-01-01T00:00:00',
    ValidTo: '2025-12-31T23:59:59',
    MaxUsageCount: 1000,
    MaxUsagePerUserCount: 1,
    IsActive: true,
    CreatedDate: '2024-12-15T10:00:00',
    UsageCount: 342,
    Categories: ['ƒêi·ªán l·∫°nh', 'ƒêi·ªán t·ª≠'],
    Services: ['S·ª≠a m√°y l·∫°nh', 'S·ª≠a m√°y gi·∫∑t'],
    PaymentMethods: ['MOMO', 'ZALOPAY', 'VNPAY'],
  },
  {
    VoucherID: 'v2',
    VoucherCode: 'FLASH50K',
    VoucherDescription: 'Gi·∫£m 50,000ƒë cho ƒë∆°n t·ª´ 500K',
    DiscountType: 'FixedAmount',
    DiscountValue: 50000,
    MinimumOrderAmount: 500000,
    ValidFrom: '2025-10-01T00:00:00',
    ValidTo: '2025-10-31T23:59:59',
    MaxUsageCount: 500,
    MaxUsagePerUserCount: 2,
    IsActive: true,
    CreatedDate: '2025-09-25T14:30:00',
    UsageCount: 128,
    Categories: ['ƒêi·ªán l·∫°nh'],
    Services: ['S·ª≠a m√°y l·∫°nh', 'S·ª≠a t·ªß l·∫°nh'],
    PaymentMethods: ['MOMO', 'ZALOPAY'],
  },
  {
    VoucherID: 'v3',
    VoucherCode: 'SUMMER15',
    VoucherDescription: 'Gi·∫£m 15% d·ªãch v·ª• ƒëi·ªán l·∫°nh m√πa h√®',
    DiscountType: 'Percentage',
    DiscountValue: 15,
    MaxDiscountAmount: 80000,
    MinimumOrderAmount: 300000,
    ValidFrom: '2025-05-01T00:00:00',
    ValidTo: '2025-08-31T23:59:59',
    MaxUsageCount: 2000,
    MaxUsagePerUserCount: 3,
    IsActive: false,
    CreatedDate: '2025-04-20T09:00:00',
    UsageCount: 1856,
    Categories: ['ƒêi·ªán l·∫°nh'],
    Services: [],
    PaymentMethods: [],
  },
];

// ============================================
// VOUCHER USAGE DATA
// ============================================

export const mockVoucherUsage: VoucherUsage[] = [
  {
    VoucherUsageID: 'vu1',
    VoucherID: 'v1',
    VoucherCode: 'WELCOME2025',
    UserID: 'u1',
    UserName: 'Nguy·ªÖn VƒÉn An',
    ServiceRequestID: 'sr1',
    PaymentID: 'pay1',
    UsedAt: '2025-10-15T14:30:00',
  },
  {
    VoucherUsageID: 'vu2',
    VoucherID: 'v2',
    VoucherCode: 'FLASH50K',
    UserID: 'u4',
    UserName: 'Ph·∫°m Th·ªã Dung',
    ServiceRequestID: 'sr2',
    PaymentID: 'pay2',
    UsedAt: '2025-10-18T10:15:00',
  },
];

// ============================================
// WALLET ACCOUNTS DATA
// ============================================

export const mockWalletAccounts: WalletAccount[] = [
  {
    WalletAccountID: 'wa1',
    TechnicianID: 't1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    CurrencyCode: 'VND',
    Balance: 15680000,
    Status: 'Active',
    CreatedDate: '2024-11-20T14:20:00',
    UpdatedDate: '2025-10-19T08:30:00',
  },
  {
    WalletAccountID: 'wa2',
    TechnicianID: 't2',
    TechnicianName: 'Ho√†ng VƒÉn Em',
    CurrencyCode: 'VND',
    Balance: 8920000,
    Status: 'Active',
    CreatedDate: '2024-12-05T11:30:00',
    UpdatedDate: '2025-10-18T16:45:00',
  },
];

// ============================================
// WALLET TRANSACTIONS DATA
// ============================================

export const mockWalletTransactions: WalletTransaction[] = [
  {
    TransactionID: 'wt1',
    WalletAccountID: 'wa1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    Type: 'Credit',
    Amount: 450000,
    Reason: 'Earning',
    ReferenceType: 'Appointment',
    ReferenceID: 'ap1',
    Note: 'Ho√†n th√†nh s·ª≠a m√°y l·∫°nh #AP001',
    CreatedAt: '2025-10-19T10:30:00',
  },
  {
    TransactionID: 'wt2',
    WalletAccountID: 'wa1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    Type: 'Debit',
    Amount: 67500,
    Reason: 'Commission',
    ReferenceType: 'Payment',
    ReferenceID: 'pay1',
    Note: 'Ph√≠ n·ªÅn t·∫£ng 15%',
    CreatedAt: '2025-10-19T10:31:00',
  },
  {
    TransactionID: 'wt3',
    WalletAccountID: 'wa1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    Type: 'Debit',
    Amount: 5000000,
    Reason: 'Withdrawal',
    ReferenceType: 'Manual',
    Note: 'R√∫t ti·ªÅn v·ªÅ t√†i kho·∫£n ng√¢n h√†ng',
    CreatedAt: '2025-10-18T14:20:00',
  },
  {
    TransactionID: 'wt4',
    WalletAccountID: 'wa2',
    TechnicianName: 'Ho√†ng VƒÉn Em',
    Type: 'Credit',
    Amount: 380000,
    Reason: 'Earning',
    ReferenceType: 'Appointment',
    ReferenceID: 'ap2',
    Note: 'Ho√†n th√†nh s·ª≠a t·ªß l·∫°nh #AP002',
    CreatedAt: '2025-10-18T16:45:00',
  },
];

// ============================================
// WALLET PAYOUT REQUESTS DATA
// ============================================

export const mockPayoutRequests: WalletPayoutRequest[] = [
  {
    PayoutRequestID: 'pr1',
    WalletAccountID: 'wa1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    Amount: 5000000,
    Status: 'Completed',
    RequestedAt: '2025-10-18T09:00:00',
    ProcessedAt: '2025-10-18T14:20:00',
    PayoutChannel: 'Bank',
    ReceiverName: 'TRAN THI BINH',
    ReceiverAccount: '1234567890',
    BankCode: 'VCB',
    Note: 'R√∫t ti·ªÅn l∆∞∆°ng th√°ng 10',
  },
  {
    PayoutRequestID: 'pr2',
    WalletAccountID: 'wa2',
    TechnicianName: 'Ho√†ng VƒÉn Em',
    Amount: 3000000,
    Status: 'Requested',
    RequestedAt: '2025-10-19T08:30:00',
    PayoutChannel: 'EWallet',
    ReceiverName: 'Ho√†ng VƒÉn Em',
    ReceiverAccount: '0905678901',
    Note: 'R√∫t v·ªÅ v√≠ MoMo',
  },
  {
    PayoutRequestID: 'pr3',
    WalletAccountID: 'wa1',
    TechnicianName: 'Tr·∫ßn Th·ªã B√¨nh',
    Amount: 2500000,
    Status: 'Processing',
    RequestedAt: '2025-10-19T10:00:00',
    PayoutChannel: 'Bank',
    ReceiverName: 'TRAN THI BINH',
    ReceiverAccount: '1234567890',
    BankCode: 'VCB',
  },
];

// ============================================
// PAYMENTS DATA
// ============================================

export const mockPayments: Payment[] = [
  {
    PaymentID: 'pay1',
    AppointmentID: 'ap1',
    Amount: 450000,
    PaymentMethodID: 'pm1',
    PaymentMethodName: 'V√≠ MoMo',
    Status: 'Completed',
    TransactionDate: '2025-10-19T10:30:00',
    InvoiceRequested: false,
  },
  {
    PaymentID: 'pay2',
    AppointmentID: 'ap2',
    Amount: 380000,
    PaymentMethodID: 'pm2',
    PaymentMethodName: 'ZaloPay',
    Status: 'Completed',
    TransactionDate: '2025-10-18T16:45:00',
    InvoiceRequested: true,
  },
  {
    PaymentID: 'pay3',
    AppointmentID: 'ap3',
    Amount: 520000,
    PaymentMethodID: 'pm5',
    PaymentMethodName: 'Ti·ªÅn m·∫∑t',
    Status: 'Pending',
    TransactionDate: '2025-10-19T11:00:00',
    InvoiceRequested: false,
  },
];

// ============================================
// SUPPORT DATA
// ============================================

export const mockDisputes: import('@/types/admin').Dispute[] = [
  {
    DisputeID: 'd1',
    AppointmentID: 'ap1',
    AppointmentDetails: {
      ServiceName: 'S·ª≠a ƒëi·ªÅu h√≤a',
      CustomerName: 'Nguy·ªÖn VƒÉn An',
      TechnicianName: 'Tr·∫ßn VƒÉn Th·ª£',
      ScheduledDate: '2025-10-15',
    },
    RaisedBy: 'c1',
    RaisedByName: 'Nguy·ªÖn VƒÉn An',
    RaisedByRole: 'Customer',
    Reason: 'Th·ª£ ƒë·∫øn mu·ªôn 2 ti·∫øng v√† kh√¥ng th√¥ng b√°o tr∆∞·ªõc. Ch·∫•t l∆∞·ª£ng s·ª≠a ch·ªØa kh√¥ng ƒë·∫£m b·∫£o, m√°y l·∫°nh v·∫´n k√™u sau khi s·ª≠a.',
    Status: 'Open',
    CreatedDate: '2025-10-19T14:30:00',
  },
  {
    DisputeID: 'd2',
    AppointmentID: 'ap2',
    AppointmentDetails: {
      ServiceName: 'S·ª≠a ·ªëng n∆∞·ªõc',
      CustomerName: 'L√™ Th·ªã B√¨nh',
      TechnicianName: 'Ph·∫°m VƒÉn C√¥ng',
      ScheduledDate: '2025-10-16',
    },
    RaisedBy: 't2',
    RaisedByName: 'Ph·∫°m VƒÉn C√¥ng',
    RaisedByRole: 'Technician',
    Reason: 'Kh√°ch h√†ng y√™u c·∫ßu l√†m th√™m c√¥ng vi·ªác ngo√†i ph·∫°m vi ƒë√£ th·ªèa thu·∫≠n nh∆∞ng kh√¥ng ch·ªãu tr·∫£ th√™m ph√≠.',
    Status: 'InProgress',
    CreatedDate: '2025-10-17T09:15:00',
  },
  {
    DisputeID: 'd3',
    AppointmentID: 'ap3',
    AppointmentDetails: {
      ServiceName: 'S·ª≠a ƒëi·ªán',
      CustomerName: 'Tr·∫ßn VƒÉn C∆∞·ªùng',
      TechnicianName: 'Ho√†ng VƒÉn ƒê·ª©c',
      ScheduledDate: '2025-10-14',
    },
    RaisedBy: 'c3',
    RaisedByName: 'Tr·∫ßn VƒÉn C∆∞·ªùng',
    RaisedByRole: 'Customer',
    Reason: 'Th·ª£ t√≠nh sai gi√°, b√°o 500k nh∆∞ng cu·ªëi c√πng ƒë√≤i 1.2 tri·ªáu',
    Status: 'Resolved',
    CreatedDate: '2025-10-14T16:00:00',
    ResolvedDate: '2025-10-15T10:30:00',
    ResolutionNotes: 'ƒê√£ x√°c minh b√°o gi√° ban ƒë·∫ßu. Ho√†n ti·ªÅn cho kh√°ch 700k. C·∫£nh c√°o th·ª£.',
  },
  {
    DisputeID: 'd4',
    AppointmentID: 'ap4',
    AppointmentDetails: {
      ServiceName: 'S∆°n nh√†',
      CustomerName: 'Ph·∫°m Th·ªã Dung',
      TechnicianName: 'Nguy·ªÖn VƒÉn Em',
      ScheduledDate: '2025-10-18',
    },
    RaisedBy: 'c4',
    RaisedByName: 'Ph·∫°m Th·ªã Dung',
    RaisedByRole: 'Customer',
    Reason: 'Th·ª£ s·ª≠ d·ª•ng s∆°n kh√¥ng ƒë√∫ng ch·∫•t l∆∞·ª£ng nh∆∞ ƒë√£ th·ªèa thu·∫≠n',
    Status: 'Open',
    CreatedDate: '2025-10-19T11:20:00',
  },
];

export const mockSupportConversations: import('@/types/admin').SupportConversation[] = [
  {
    ConversationId: 'conv1',
    ConversationType: 'support',
    CustomerName: 'Nguy·ªÖn VƒÉn An',
    CustomerAvatar: 'https://i.pravatar.cc/150?img=1',
    Subject: 'Kh√¥ng t√¨m ƒë∆∞·ª£c th·ª£',
    Status: 'Waiting',
    LastMessageAt: '2025-10-19T15:30:00',
    UnreadCount: 3,
    CreatedAt: '2025-10-19T15:00:00',
  },
  {
    ConversationId: 'conv2',
    ConversationType: 'support',
    CustomerName: 'Tr·∫ßn Th·ªã B√¨nh',
    CustomerAvatar: 'https://i.pravatar.cc/150?img=2',
    Subject: 'V·∫•n ƒë·ªÅ thanh to√°n',
    Status: 'InProgress',
    LastMessageAt: '2025-10-19T14:20:00',
    UnreadCount: 1,
    AssignedTo: 'Support Agent #2',
    CreatedAt: '2025-10-19T10:30:00',
  },
  {
    ConversationId: 'conv3',
    ConversationType: 'support',
    CustomerName: 'L√™ VƒÉn C∆∞·ªùng',
    Subject: 'T√†i kho·∫£n b·ªã kh√≥a',
    Status: 'InProgress',
    LastMessageAt: '2025-10-19T13:45:00',
    UnreadCount: 0,
    AssignedTo: 'Support Agent #1',
    CreatedAt: '2025-10-19T09:00:00',
  },
  {
    ConversationId: 'conv4',
    ConversationType: 'support',
    CustomerName: 'Ph·∫°m Th·ªã Dung',
    CustomerAvatar: 'https://i.pravatar.cc/150?img=4',
    Subject: 'C√°ch s·ª≠ d·ª•ng voucher',
    Status: 'Resolved',
    LastMessageAt: '2025-10-18T16:30:00',
    UnreadCount: 0,
    CreatedAt: '2025-10-18T14:00:00',
  },
];

export const mockActivityLogs: import('@/types/admin').ActivityLog[] = [
  {
    LogID: 'log1',
    AppointmentID: 'ap1',
    UserID: 'u1',
    UserName: 'Nguy·ªÖn VƒÉn An',
    Action: 'STATUS_CHANGED',
    OldValue: 'Scheduled',
    NewValue: 'InProgress',
    LoggedAt: '2025-10-19T08:00:00',
    EntityType: 'Appointment',
  },
  {
    LogID: 'log2',
    RequestID: 'req1',
    UserID: 't1',
    UserName: 'Tr·∫ßn VƒÉn Th·ª£',
    Action: 'OFFER_SUBMITTED',
    NewValue: '500000 VND',
    LoggedAt: '2025-10-18T14:30:00',
    EntityType: 'Request',
  },
  {
    LogID: 'log3',
    AppointmentID: 'ap2',
    UserID: 'system',
    UserName: 'System',
    Action: 'PAYMENT_COMPLETED',
    NewValue: '350000 VND',
    LoggedAt: '2025-10-18T16:45:00',
    EntityType: 'Payment',
  },
  {
    LogID: 'log4',
    UserID: 'u5',
    UserName: 'Admin',
    Action: 'USER_SUSPENDED',
    OldValue: 'Active',
    NewValue: 'Suspended',
    LoggedAt: '2025-10-17T11:20:00',
    EntityType: 'User',
  },
];

export const mockProblematicRequests: import('@/types/admin').ProblematicRequest[] = [
  {
    RequestID: 'req5',
    CustomerID: 'c5',
    CustomerName: 'V√µ VƒÉn Ph√∫c',
    ServiceName: 'S·ª≠a m√°y gi·∫∑t',
    Status: 'Pending',
    IssueType: 'NoOffers',
    IssueDescription: 'Kh√¥ng c√≥ th·ª£ n√†o g·ª≠i b√°o gi√° sau 3 ng√†y',
    RequestedDate: '2025-10-16T10:00:00',
    DaysPending: 3,
    OfferCount: 0,
  },
  {
    RequestID: 'req6',
    CustomerID: 'c6',
    CustomerName: 'ƒê·∫∑ng Th·ªã Giang',
    ServiceName: 'S·ª≠a t·ªß l·∫°nh',
    Status: 'Cancelled',
    IssueType: 'Cancelled',
    IssueDescription: 'Kh√°ch h·ªßy sau khi ƒë√£ c√≥ 2 th·ª£ nh·∫≠n',
    RequestedDate: '2025-10-17T09:00:00',
    DaysPending: 2,
    OfferCount: 2,
  },
  {
    RequestID: 'req7',
    CustomerID: 'c7',
    CustomerName: 'B√πi VƒÉn H√πng',
    ServiceName: 'S·ª≠a c·ª≠a',
    Status: 'Pending',
    IssueType: 'Expired',
    IssueDescription: 'Qu√° h·∫°n th·ªùi gian x·ª≠ l√Ω (> 7 ng√†y)',
    RequestedDate: '2025-10-10T08:00:00',
    DaysPending: 9,
    OfferCount: 1,
  },
  {
    RequestID: 'req8',
    CustomerID: 'c8',
    CustomerName: 'L√Ω Th·ªã Lan',
    ServiceName: 'S·ª≠a b·ªìn c·∫ßu',
    Status: 'Pending',
    IssueType: 'Stuck',
    IssueDescription: 'C√≥ offer nh∆∞ng kh√¥ng chuy·ªÉn sang appointment',
    RequestedDate: '2025-10-15T11:30:00',
    DaysPending: 4,
    OfferCount: 3,
  },
];
